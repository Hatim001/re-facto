# Generated by Django 4.1 on 2023-11-23 03:29

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Branch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'Branch',
            },
        ),
        migrations.CreateModel(
            name='Repository',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('repo_id', models.BigIntegerField()),
                ('name', models.CharField(max_length=100)),
                ('url', models.CharField(max_length=500)),
            ],
            options={
                'db_table': 'Repository',
            },
        ),
        migrations.CreateModel(
            name='UserAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('account_id', models.CharField(max_length=255, unique=True)),
                ('access_token', models.CharField(max_length=255)),
                ('email', models.CharField(max_length=255, null=True)),
                ('account_type', models.CharField(choices=[('GITHUB', 'GITHUB'), ('GITLAB', 'GITLAB')], default='GITHUB', max_length=255)),
                ('user_name', models.CharField(max_length=255, unique=True)),
                ('name', models.CharField(max_length=255, null=True)),
                ('company', models.CharField(max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'UserAccount',
            },
        ),
        migrations.CreateModel(
            name='UserConfiguration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('commit_interval', models.IntegerField()),
                ('max_lines', models.IntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.useraccount')),
            ],
            options={
                'db_table': 'UserConfiguration',
            },
        ),
        migrations.CreateModel(
            name='TargetConfiguration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('repository', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.repository')),
                ('target_branch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='target_branch', to='account.branch')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.useraccount')),
            ],
            options={
                'db_table': 'TargetConfiguration',
            },
        ),
        migrations.CreateModel(
            name='SourceConfiguration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('current_commit', models.IntegerField(default=1)),
                ('repository', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.repository')),
                ('source_branch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.branch')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.useraccount')),
            ],
            options={
                'db_table': 'SourceConfiguration',
            },
        ),
        migrations.AddField(
            model_name='repository',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.useraccount'),
        ),
        migrations.CreateModel(
            name='PullDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pull_id', models.IntegerField(unique=True)),
                ('Repo_name', models.CharField(max_length=255)),
                ('title', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.useraccount', to_field='user_name')),
            ],
            options={
                'db_table': 'PullDetails',
            },
        ),
        migrations.AddField(
            model_name='branch',
            name='repository',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.repository'),
        ),
        migrations.AddField(
            model_name='branch',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.useraccount'),
        ),
        migrations.CreateModel(
            name='DashBoardFetch',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('account.pulldetails',),
        ),
        migrations.CreateModel(
            name='GitHubAccount',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('account.useraccount',),
        ),
    ]
